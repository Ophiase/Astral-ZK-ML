use astral_zkml::math;
use astral_zkml::math::signed::{
    I128SignedBasics, unsigned_to_signed, felt_to_i128, I128Div, I128Display,
};
use astral_zkml::math::wfloat::{
    WFloat, WFloatBasics, ZERO_WFLOAT, ONE_WFLOAT, NEG_WFLOAT, HALF_WFLOAT, DECIMAL_WFLOAT,
};
use astral_zkml::math::vector::{Vector, VectorBasics};
use astral_zkml::math::matrix::{Matrix, MatrixBasics};
use astral_zkml::contract::country_wise_contract::{
    CountryWiseContract, ICountryWiseContractDispatcher, ICountryWiseContractDispatcherTrait
};

use starknet::syscalls::deploy_syscall;
use starknet::ContractAddress;

// ------------------------------------------------------------------------------------

fn util_felt_addr(addr_felt: felt252) -> ContractAddress {
    addr_felt.try_into().unwrap()
}

fn deploy_contract() -> ICountryWiseContractDispatcher {
    let calldata: Span<felt252> = array![
        4,
        6,
        7,
        3618502788666131213697322783095070105623107215331596699973092056135872017279,
        3618502788666131213697322783095070105623107215331596699973092056135872014279,
        4380,
        3618502788666131213697322783095070105623107215331596699973092056135872007640,
        3618502788666131213697322783095070105623107215331596699973092056135872011946,
        3618502788666131213697322783095070105623107215331596699973092056135872011401,
        16181,
        7,
        3618502788666131213697322783095070105623107215331596699973092056135872016566,
        16131,
        6876,
        1125,
        3618502788666131213697322783095070105623107215331596699973092056135872018112,
        3618502788666131213697322783095070105623107215331596699973092056135872010052,
        5993,
        7,
        3618502788666131213697322783095070105623107215331596699973092056135872013454,
        3618502788666131213697322783095070105623107215331596699973092056135872018539,
        6580,
        3618502788666131213697322783095070105623107215331596699973092056135872008445,
        3618502788666131213697322783095070105623107215331596699973092056135872019409,
        3618502788666131213697322783095070105623107215331596699973092056135872014081,
        328,
        7,
        3618502788666131213697322783095070105623107215331596699973092056135872017947,
        1343,
        3618502788666131213697322783095070105623107215331596699973092056135872009198,
        4404,
        3618502788666131213697322783095070105623107215331596699973092056135872014286,
        6936,
        429,
        7,
        3618502788666131213697322783095070105623107215331596699973092056135872012278,
        13864,
        3618502788666131213697322783095070105623107215331596699973092056135872001428,
        3618502788666131213697322783095070105623107215331596699973092056135872015817,
        3618502788666131213697322783095070105623107215331596699973092056135872018745,
        1315,
        7433,
        7,
        5428,
        2992,
        10154,
        6247,
        15013,
        3618502788666131213697322783095070105623107215331596699973092056135872019081,
        3737,
        7,
        1,
        0,
        14,
        3618502788666131213697322783095070105623107215331596699973092056135872020464,
        2,
        3618502788666131213697322783095070105623107215331596699973092056135872020478,
        0,
        0,
        7,
        4,
        3618502788666131213697322783095070105623107215331596699973092056135872017728,
        3618502788666131213697322783095070105623107215331596699973092056135872013534,
        2221,
        3618502788666131213697322783095070105623107215331596699973092056135872014030,
        4,
        4880,
        3618502788666131213697322783095070105623107215331596699973092056135872015160,
        6865,
        3618502788666131213697322783095070105623107215331596699973092056135872011796,
        4,
        3618502788666131213697322783095070105623107215331596699973092056135872009382,
        3618502788666131213697322783095070105623107215331596699973092056135871998319,
        24870,
        6235,
        4,
        7481,
        6079,
        17340,
        20254,
        4,
        3618502788666131213697322783095070105623107215331596699973092056135872009334,
        16938,
        3618502788666131213697322783095070105623107215331596699973092056135872003160,
        3618502788666131213697322783095070105623107215331596699973092056135871992265,
        4,
        3618502788666131213697322783095070105623107215331596699973092056135872010334,
        14404,
        2266,
        2697,
        4,
        3618502788666131213697322783095070105623107215331596699973092056135872014391,
        3618502788666131213697322783095070105623107215331596699973092056135872003010,
        10335,
        3618502788666131213697322783095070105623107215331596699973092056135872010524,
        4,
        3618502788666131213697322783095070105623107215331596699973092056135872020457,
        3618502788666131213697322783095070105623107215331596699973092056135872020445,
        3618502788666131213697322783095070105623107215331596699973092056135872020441,
        0,
        0,
        4,
        8,
        3618502788666131213697322783095070105623107215331596699973092056135872018536,
        3618502788666131213697322783095070105623107215331596699973092056135872019570,
        5423,
        8015,
        3618502788666131213697322783095070105623107215331596699973092056135872013551,
        3618502788666131213697322783095070105623107215331596699973092056135872010744,
        5836,
        19122,
        8,
        3618502788666131213697322783095070105623107215331596699973092056135871991161,
        5029,
        1898,
        11600,
        3618502788666131213697322783095070105623107215331596699973092056135872015200,
        3618502788666131213697322783095070105623107215331596699973092056135872013007,
        15429,
        6806,
        8,
        1940,
        16670,
        3618502788666131213697322783095070105623107215331596699973092056135872018800,
        19690,
        8215,
        3618502788666131213697322783095070105623107215331596699973092056135872009642,
        728,
        9272,
        8,
        3618502788666131213697322783095070105623107215331596699973092056135872013498,
        3618502788666131213697322783095070105623107215331596699973092056135872019493,
        3618502788666131213697322783095070105623107215331596699973092056135872016043,
        13881,
        17767,
        3618502788666131213697322783095070105623107215331596699973092056135872020111,
        3219,
        3618502788666131213697322783095070105623107215331596699973092056135872012535,
        8,
        3618502788666131213697322783095070105623107215331596699973092056135872020354,
        3618502788666131213697322783095070105623107215331596699973092056135872018927,
        3618502788666131213697322783095070105623107215331596699973092056135872020420,
        3618502788666131213697322783095070105623107215331596699973092056135872020258,
        3618502788666131213697322783095070105623107215331596699973092056135872019834,
        0,
        3618502788666131213697322783095070105623107215331596699973092056135872019228,
        3618502788666131213697322783095070105623107215331596699973092056135872020086,
        0,
        8,
        6,
        3618502788666131213697322783095070105623107215331596699973092056135872016692,
        13412,
        3618502788666131213697322783095070105623107215331596699973092056135872019204,
        3618502788666131213697322783095070105623107215331596699973092056135872010057,
        15909,
        3618502788666131213697322783095070105623107215331596699973092056135872013635,
        6,
        3618502788666131213697322783095070105623107215331596699973092056135872012120,
        3618502788666131213697322783095070105623107215331596699973092056135872008995,
        7309,
        13596,
        3618502788666131213697322783095070105623107215331596699973092056135872003034,
        7200,
        6,
        3618502788666131213697322783095070105623107215331596699973092056135872019722,
        3618502788666131213697322783095070105623107215331596699973092056135872019075,
        14372,
        6539,
        3618502788666131213697322783095070105623107215331596699973092056135872016320,
        7970,
        6,
        18001,
        3618502788666131213697322783095070105623107215331596699973092056135872001813,
        2477,
        4480,
        18161,
        6914,
        6,
        5796,
        6225,
        3618502788666131213697322783095070105623107215331596699973092056135872014009,
        3618502788666131213697322783095070105623107215331596699973092056135872006547,
        957,
        3618502788666131213697322783095070105623107215331596699973092056135871996879,
        6,
        898,
        3618502788666131213697322783095070105623107215331596699973092056135872006483,
        3618502788666131213697322783095070105623107215331596699973092056135872013346,
        3618502788666131213697322783095070105623107215331596699973092056135872016532,
        3138,
        14857,
        6,
        1082,
        3618502788666131213697322783095070105623107215331596699973092056135872010145,
        3618502788666131213697322783095070105623107215331596699973092056135872007946,
        18579,
        3781,
        3618502788666131213697322783095070105623107215331596699973092056135872006832,
        6,
        8718,
        3618502788666131213697322783095070105623107215331596699973092056135872007586,
        3618502788666131213697322783095070105623107215331596699973092056135872016523,
        3618502788666131213697322783095070105623107215331596699973092056135872011798,
        4986,
        8154,
        6,
        39211,
        0,
        207144,
        105254,
        239076,
        212156,
        0
    ]
        .span();

    let (address0, _) = deploy_syscall(
        CountryWiseContract::TEST_CLASS_HASH.try_into().unwrap(), 0, calldata, false
    )
        .unwrap();
    let contract0 = ICountryWiseContractDispatcher { contract_address: address0 };

    contract0
}

#[test]
fn check_contract() -> () {
    let dispatcher: ICountryWiseContractDispatcher = deploy_contract();

    let _admin_0 = util_felt_addr('Akashi');
    let _admin_1 = util_felt_addr('Ozu');
    let _admin_2 = util_felt_addr('Higuchi');

    starknet::testing::set_contract_address(_admin_0);

    // -------------------------------------------------------------------

    let rawX = array![
        array![
            3618502788666131213697322783095070105623107215331596699973092056135871290719,
            3618502788666131213697322783095070105623107215331596699973092056135871421858,
            3618502788666131213697322783095070105623107215331596699973092056135871561438,
            946440,
            10000000,
            5000000,
        ]
            .span(),
        array![
            3618502788666131213697322783095070105623107215331596699973092056135871269738,
            3618502788666131213697322783095070105623107215331596699973092056135871421858,
            3618502788666131213697322783095070105623107215331596699973092056135871561053,
            1127211,
            10000000,
            5000000,
        ]
            .span(),
        array![
            822715,
            3618502788666131213697322783095070105623107215331596699973092056135871421858,
            3618502788666131213697322783095070105623107215331596699973092056135871560966,
            650546,
            0,
            1000000,
        ]
            .span(),
        array![
            3618502788666131213697322783095070105623107215331596699973092056135871230609,
            3618502788666131213697322783095070105623107215331596699973092056135871421858,
            3618502788666131213697322783095070105623107215331596699973092056135871561173,
            1243284,
            10000000,
            5000000,
        ]
            .span(),
        array![
            1321220,
            3618502788666131213697322783095070105623107215331596699973092056135871421858,
            3618502788666131213697322783095070105623107215331596699973092056135871560962,
            551598,
            0,
            1000000,
        ]
            .span(),
    ]
        .span();
    let rawY = array![
        array![272232, 172351, 109949, 71285, 285176, 89003,].span(),
        array![272232, 172351, 109949, 71285, 285176, 89003,].span(),
        array![272232, 172351, 109949, 71285, 285176, 89003,].span(),
        array![272232, 172351, 109949, 71285, 285176, 89003,].span(),
        array![272232, 172351, 109949, 71285, 285176, 89003,].span(),
    ]
        .span();

    let X = MatrixBasics::from_raw_felt(@rawX);
    let Y = MatrixBasics::from_raw_felt(@rawY);

    // -------------------------------------------------------------------

    let result = dispatcher.predict(X, false);
    println!("result : \n{result}");
    println!("wanted : \n{Y}");
// -------------------------------------------------------------------

}
